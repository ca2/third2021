<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="strophe" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="basis">
				<Option output="$(#archive)/storage-linux/third/library/x64/libstrophe.so" prefix_auto="0" extension_auto="0" />
				<Option working_dir="$(WORKSPACEDIR)/../../time-$(#platform_modifier)/x64/$(TARGET_NAME)/" />
				<Option object_output="$(#time_dir)/intermediate/app-core/strophe" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option parameters=": app=app-core/hellomultiverse build_number=basis version=basis locale=_std schema=_std" />
				<Option host_application="/ca2/time/x64/basis/app" />
				<Option run_host_application_in_terminal="0" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Compiler>
					<Add option="-fPIC" />
					<Add option="-g" />
					<Add option="-D_DEBUG" />
					<Add directory="$(#archive.include)/platform-linux/third/include/strophe" />
				</Compiler>
			</Target>
			<Target title="memdleak">
				<Option output="$(WORKSPACEDIR)/../../time-$(#platform_modifier)/x64/$(TARGET_NAME)/lib$(PROJECT_NAME).so" prefix_auto="0" extension_auto="0" />
				<Option working_dir="$(WORKSPACEDIR)/../../time-$(#platform_modifier)/x64/$(TARGET_NAME)/" />
				<Option object_output="$(#time_dir)/intermediate/$(TARGET_NAME)/$(PROJECT_NAME)" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Option parameters=": app=app-core/hellomultiverse build_number=basis locale=_std schema=_std" />
				<Option host_application="/ca2/time/x64/basis/app" />
				<Option run_host_application_in_terminal="0" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Compiler>
					<Add option="-g" />
					<Add option="-D_DEBUG" />
					<Add option="-DMEMDLEAK" />
				</Compiler>
			</Target>
		</Build>
		<Compiler>
			<Add option="-fPIC" />
			<Add option="-std=c++17" />
			<Add option="-fexceptions" />
			<Add option="-fnon-call-exceptions" />
			<Add option="-fno-pie" />
			<Add option="-fno-stack-protector" />
			<Add option="-Wno-pointer-arith" />
			<Add option="-Wno-attributes" />
			<Add option="-Winvalid-pch" />
			<Add option="-Wno-conversion-null" />
			<Add option="-D_APP_CORE_XMPP_LIBRARY" />
			<Add directory="." />
			<Add directory="$(PROJECT_DIR)" />
			<Add directory="$(#archive.include)" />
			<Add directory="$(WORKSPACE_DIR)/../.." />
			<Add directory="$(WORKSPACE_DIR)/../../inc" />
			<Add directory="$(WORKSPACE_DIR)/../../include" />
			<Add directory="$(WORKSPACE_DIR)/../../platform-linux" />
			<Add directory="$(WORKSPACE_DIR)/../../platform-linux/_include" />
			<Add directory="$(WORKSPACE_DIR)/../../app/_include" />
			<Add directory="$(WORKSPACE_DIR)/../../app" />
			<Add directory="$(#sensitive)/sensitive/include" />
			<Add directory="$(#archive)/third-linux/third/include/strophe" />
		</Compiler>
		<Linker>
			<Add option="-Wl,-rpath=\\$$$ORIGIN" />
			<Add option="-lresolv" />
			<Add option="-lexpat" />
			<Add option="-lcrypto" />
			<Add option="-lssl" />
			<Add option="-Wl,-z,defs" />
			<Add directory="$(WORKSPACEDIR)/../../time-$(#platform_modifier)/x64/$(TARGET_NAME)" />
		</Linker>
		<ExtraCommands>
			<Add before="../../platform-linux/stage/prepare_framework_h.sh $(PROJECT_DIR) $(TARGET_OBJECT_DIR)" />
		</ExtraCommands>
		<Unit filename="src/auth.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/ca2_stanza.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/conn.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/crypto.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/ctx.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/event.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/handler.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/hash.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/jid.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/md5.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/oocontext.cpp" />
		<Unit filename="src/oostanza.cpp" />
		<Unit filename="src/parser_expat.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/rand.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/resolver.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/sasl.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/scram.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/sha1.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/snprintf.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/sock.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/stanza.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/thread.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/tls_openssl.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/util.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="tests/test.h" />
		<Extensions>
			<DoxyBlocks>
				<comment_style block="0" line="0" />
				<doxyfile_project />
				<doxyfile_build />
				<doxyfile_warnings />
				<doxyfile_output />
				<doxyfile_dot />
				<general />
			</DoxyBlocks>
			<envvars />
			<code_completion />
			<debugger />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
